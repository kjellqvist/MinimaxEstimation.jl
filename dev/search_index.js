var documenterSearchIndex = {"docs":
[{"location":"lib/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"lib/","page":"Library","title":"Library","text":"Modules = [MinimaxEstimation]","category":"page"},{"location":"lib/#MinimaxEstimation.MinimaxEstimation","page":"Library","title":"MinimaxEstimation.MinimaxEstimation","text":"Main module for MinimaxEstimation.jl\n\n\n\n\n\n","category":"module"},{"location":"lib/#MinimaxEstimation.BayesianMMAE-Union{Tuple{AbstractArray{KalmanFilter{T},1}}, Tuple{T}} where T<:AbstractFloat","page":"Library","title":"MinimaxEstimation.BayesianMMAE","text":"mmae = BayesianMMAE(filterbank)\n\nConstruct a standard Multiple Model Adaptive Estimator object.\n\nCreate an estimator for the case where the dynamics belong to  the finite set of linear systems equations\n\nbeginaligned\nx_t+1  = F_ix_t + B_iu_t + w_t + textoffset_i\ny_t      = H_ix_t + v_t\nendaligned\n\nfilterbank is an array of KalmanFilter objects associated with the dynamics and disturbance characteristics of each i.\n\n\n\n\n\n","category":"method"},{"location":"lib/#MinimaxEstimation.KalmanFilter-Union{Tuple{T}, Tuple{AbstractArray{T,1},AbstractArray{T,2},AbstractArray{T,2},AbstractArray{T,2},AbstractArray{T,2},AbstractArray{T,2},AbstractArray{T,2},AbstractArray{T,1}}} where T<:AbstractFloat","page":"Library","title":"MinimaxEstimation.KalmanFilter","text":"kf = KalmanFilter(x, F, H, B, P, Q, R, offset)\n\nCreate a KalmanFilter object.\n\nfor the dynamical system \n\nbeginaligned\nx_t+1  = Fx_t + Bu_t + w_t + textoffset\ny_t      = Hx_t + v_t\nendaligned\n\nwhere x_tin mathbbR^n are the states, uin mathbbR^p are known inputs  y_tin mathbbR^m are measured outputs and   w_tin mathbbR^n v_t in mathbbR^m are unknown, uncorrelated disturbances,  with positive definite covariance matrices Q in mathbbR^ntimes n and  R in mathbbR^mtimes m respectively. The offset is an n-dimensional constant.\n\n\n\n\n\n","category":"method"},{"location":"lib/#MinimaxEstimation.MinimaxMMAE-Union{Tuple{T}, Tuple{AbstractArray{KalmanFilter{T},1},Real,Function}} where T<:AbstractFloat","page":"Library","title":"MinimaxEstimation.MinimaxMMAE","text":"mini = MinimaxMMAE(filterbank, Î³, optimizer)\n\nConstruct a Minimax Multiple Model Adaptive Estimator object.\n\nCreate an estimator for the case where the dynamics belong to  the finite set of linear systems equations\n\nbeginaligned\nx_t+1  = F_ix_t + B_iu_t + w_t + textoffset_i\ny_t      = H_ix_t + v_t\nendaligned\n\nand the associated objective\n\nmin_hat y_Nmax_x_0 mathbfw^N mathbfv^N iBigg hat y_N - H_ix_N^2 - gamma^2left(x_0 - hat x_0^2_P_0^-1 + sum_t=0^N-1 w_t^2_Q^-1 + v_t^2_R^-1right)Bigg\n\nFilterbank is an array of KalmanFilter object associated with each i.\n\n\n\n\n\n","category":"method"},{"location":"lib/#MinimaxEstimation.predict-Tuple{MinimaxEstimation.AbstractFilter}","page":"Library","title":"MinimaxEstimation.predict","text":"predict(filter)\n\nPredict the states at the next time instance.\n\nMethods\n\nxhat = predict(filter::KalmanFilter)\n\nGet the kalman filter prediction of the state at the next time-step, hat x_t+1.\n\nyhat, val = predict(minimaxfilter)\n\nPredict the output of the next time-step as the minimizing argument of  the quadratically constrainde convex program\n\nJ_N^star(y)= min_hat y max_i hat y - H_ibreve x_Ni^2_(I-gamma^-2H_iP_NiH_i^top)^-1 - gamma^2 c_Ni\n\nyhat = predict(bayesianfilter)\n\nPredict the output at the next time-step as the expected value Ehat y_t+1 = sum_i=1^K breve y_i p(iy_t), where breve y_i are the corresponding KalmanFilter estimates.\n\n\n\n\n\n","category":"method"},{"location":"lib/#MinimaxEstimation.update!-Tuple{MinimaxEstimation.AbstractFilter,Any,Any}","page":"Library","title":"MinimaxEstimation.update!","text":"update!(filter, y, u)\n\nUpdate the internal states of the filter in accordance with the output y and input u.\n\nMethods\n\nupdate!(filter::KalmanFilter, y, u)\n\nUpdate the internal states of the KalmanFilter in according to measured output y and controlled input u.\n\nThe internal states are updated as follows\n\nbeginaligned\nP_t+1  = Q + FP_tF^top quad - FP_tH^top(R + HP_tH^top)^-1H P_tF^top \nbrevex_t+1    = F brevex_t + K_t(y_t - Hbrevex_t)\nK_t      = FP_tH^top(R + H P_t H^top)^-1 \nc_t+1  = H_ibreve x_t -y_t^2_(R + HP_tH^top)^-1 + c_t \np(iy_t)  = frac1(2pi)^n2sqrtR + HP_tH^tope^-12 (Hhat x_t - y_t)^top (R + HP_tH^top)^-1(Hx_t-y_t)p(iy_t-1)\nendaligned\n\nThe cummulative costs c_t are states used by Minimax Adaptive Estimators, and p(iy_t) are states used by the standard adaptive estimator.\n\nupdate!(filter::MinimaxFilter, y, u)\n\nUpdate each filter in the internal filterbank of the minimaxfilter object.\n\nupdate!(filter::BayesianFilter, y, u)\n\nUpdate each filter in the internal filterbank of the standard multiple model adaptive filter and normalize the probability of a given state being active conditioned on past measurements, p(i y_t).\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MinimaxEstimation","category":"page"},{"location":"#MinimaxEstimation","page":"Home","title":"MinimaxEstimation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for reproducing and experimenting with the results from the article.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg;\nPkg.add(url=\"https://github.com/kjellqvist/MinimaxEstimation.jl\")","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"example/#Example","page":"Example","title":"Example","text":"","category":"section"},{"location":"example/","page":"Example","title":"Example","text":"The example in the article is restated below, with a self-contained code block to reproduce the results.","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"beginaligned\nx_t+1  = ibeginbmatrix11  -05  01  1  0  0  0  1  0endbmatrixx_t + beginbmatrix -1 2  3endbmatrixu_t + w_t \ny_t      = beginbmatrix1  0  0endbmatrixx_t + v_t \nx_0      = 0\nendaligned","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"where iin-11 u_t = sin(t5), v_t and w_t are unit intensity, uncorrelated, Gaussian white noise. Further, Q = I R = I P_0 = I. ","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"using Hypatia\nusing LinearAlgebra\nusing MinimaxEstimation\nusing Plots\nusing Random\n\nRandom.seed!(10)\nn_steps = 20\nF = [1.1 -.5 0.1\n    1 0 0\n    0 1 0]\nB = [-1;2;3]\nH = [1 0 0]\nx0 = [0; 0; 0]\nQ = I(3)\nR = 1\nP = I(3)\ngamma = 3\n\nkf1 = KalmanFilter(x0, F, H,B, P, Q, R)\nkf2 = KalmanFilter(x0, -F, H,B, P, Q, R)\nmini = MinimaxMMAE(copy([kf1, kf2]), gamma, ()-> Hypatia.Optimizer())\n\nbayesian = BayesianMMAE(copy([kf1, kf2]))\nv = randn((1,n_steps))\nw = randn((3, n_steps))\nu(k) = sin(k/5)\ny = zeros(n_steps+1)\nHx = zeros(n_steps+1)\ny[1] = 0\nHx[1] = 0\n\nyhat_mini = zeros(n_steps+1)\nvals_mini = zeros(n_steps+1)\nyhat_bayesian = zeros(n_steps+1)\n\nyhat_mini[1]= predict(mini, false)[1][1]\nyhat_bayesian[1] = predict(bayesian)[1]\nx = x0\nfor k=1:n_steps\n    update!(mini,y[k], u(k))\n    update!(bayesian, y[k], u(k))\n    \n    yhat_mini[k+1] = predict(mini, false)[1][1]\n    yhat_bayesian[k+1] = predict(bayesian)[1]\n    global x = F*x + B*u(k) + w[:,k]\n    y[k+1] = (H*x)[1] + v[k]\n    Hx[k+1] = (H*x)[1]\n    k +=1\nend\nprint(\"||Hx - yhat_mini|| = \", norm(Hx - yhat_mini), \"\\n\")\nprint(\"||Hx - yhat_bayesian|| = \", norm(Hx - yhat_bayesian), \"\\n\")\nprint(\"||Hx_{n+1} - y_n|| = \", norm(Hx[2:end]-y[1:end-1]), \"\\n\")\nplot(\n    [Hx yhat_mini yhat_bayesian], \n    legend=:bottomright,\n    labels = [\"Hx\" \"yhat_minimax\" \"yhat_bayesian\"],\n    linewidth=3,\n    markershape = :o,\n    xlabel = \"time-step\",\n    ylabel = \"Output\")\n\nsavefig(\"experiment.svg\"); nothing # hide","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"(Image: )","category":"page"}]
}
